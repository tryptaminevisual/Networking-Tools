#!/bin/python3.9

from scapy.all import *
from scapy.layers.inet6 import IPv6, ICMPv6EchoRequest, IPv6ExtHdrFragment, fragment6, Jumbo, IPv6ExtHdrHopByHop, \
    IPv6ExtHdrRouting, IPv6ExtHdrDestOpt
from colorama import Fore

pwd = '/home/kali/PycharmProjects/Network/dumps/testfile.txt'
log = '/home/kali/PycharmProjects/Network/dumps/log.log'
command = 'cat /home/kali/PycharmProjects/Network/dumps/test.txt'
payload = "foo.bar" * 50
# To make this work we need to use the following commands
#   -> sudo ifconfig eth0 add 2100::102/64
#   -> ip -6 route add default via 2100::1
# This way we add a IPv6 reciever

print(75 * "-")
print("Implementing an Application using IPv6 Headers")
print("Codificate information using ASCII")
print("Send it to the destination without being detected")
print("Implementation of both codifier & decodifier")
print(75 * "-")

# Headers for IPV6 protocol

IPV6_Next_Header_HOP_by_HOP = 0
IPV6_Next_Header_TCP = 6
IPV6_Next_Header_UDP = 17
IPV6_Next_Header_ICMP = 58

# Array for upper layer protocols of IPV6

Upper_Layer_Protocols = [
    IPV6_Next_Header_HOP_by_HOP,
    IPV6_Next_Header_TCP,
    IPV6_Next_Header_UDP,
    IPV6_Next_Header_ICMP,
]

# For protocol codes the values range from 0 to 127 (high-order bits is 0) indicates an error message
# Values from 128 to 255 (high-order bits is 1) indicate an information message

# IMCP Protocol Codes

ICMP_Echo_Request = 128
# Since the value is 128 we are indicating an information message
ICMP_Echo_Response = 129

# The default value for the IPv6 Hop limit is 64, even tho the range is between 1-255
HOP_Limit_Default = 64

# We are going to add the "dst" on our IPv6 paket
# In this case is 2100::102


ip = IPv6()
ip.dst = input("Insert your destination address: " + "")
ip.src = input("Insert your source address: " + "")
print(75 * "-")
extension = IPv6ExtHdrHopByHop()
jumbo = Jumbo()
jumbo.jumboplen = 2 ** 30
extension.options = jumbo
packet = ip / extension
data = "this is a test packet"
icmp = ICMPv6EchoRequest(data=data)
fragment_hdr = IPv6ExtHdrFragment()
packets = fragment6(ip / fragment_hdr / icmp, fragSize=56)
ip.show()
print(75 * "-")
packet.show2()
print(75 * "-")
input("Press any key to send the packets:")
print(75 * "-")
send(packets)
print(75 * "-")
print("This is the sent packets:")
print(75 * "-")
print(packets)
print(75 * "-")
# Getting a more clearer OUTPUT
print("Cleaner output:")
os.system(command)
print(75 * "-")
print("Lets add en Echo Request and Echo Reply (Ping-Pong)")
print(75 * "-")
base = IPv6(dst='2100::102')
extension1 = ICMPv6EchoRequest(data=payload)
packet1 = base / extension1
packet1.show()
print(75 * "-")
input("Press any key to send the packets:")
print(75 * "-")
send(packet1)
print(75 * "-")
print(packet1)
print(75 * "-")
print("Since this was testing and showing how the packets are and their structure, now we are going to")
print("Start developing our own custom packets, to see if these test packets work open wireshark and test the traffic")
print("Once you have verified all the IPv6 packets are sent, lets continue with the excersise")
input("Press any key to move to the next part of the Packet creation:")
os.system("clear")
print(75 * "-")
print("This was a few test packets, now we are going to create a packet with the following extensions:")
print("Hop-By-Hop - Basic value: 0")
print("Routing - Basic value: 43")
print("Fragment - Basic value: 44")
print("Destination - Basic value: 60")
print(75 * "-")
input("Press any key to see the menu!:")
os.system("clear")


def show_menu_one():  # First menu to start making a basic packet
    print(50 * "-")
    print(Fore.RED + " Main Menu")
    print(50 * "-")
    print(Fore.BLUE + "Basic IPv6 Packet (1)")
    print(Fore.GREEN + "Edit Hop-By-Hop (2)")
    print(Fore.RED + "Edit Routing (3)")
    print(Fore.YELLOW + "Edit Fragment (4)")
    print(Fore.CYAN + "Edit Destination (5)")
    print(Fore.MAGENTA + "Calculate Captured Packet Size (6)")
    print(Fore.WHITE + "Exit (7)")
    print(50 * "-")
    target = input("Please select your option: ")
    print(50 * "-")
    if target == "1":
        os.system("clear")
        i = IPv6()
        i.show()
        print(50 * "-")
        input("Press any key to go back to the main menu: ")
        print(50 * "-")
        os.system("clear")
        show_menu_one()
    elif target == "2":
        os.system("clear")
        print(50 * "-")
        print(Fore.BLUE + "Here we will modify an IPv6 packet, for this we need to specify a destination address:")
        print(50 * "-")
        base1 = IPv6()
        base1.dst = input(Fore.RED + "Please input your destination address:" + " ")
        base1.src = input(Fore.RED + "Please input your source address: " + " ")
        base1.tc = int(input("Please input your Traffic Class (tc) value: " + " "))
        base1.fl = int(input("Please input you Flow Label (fl) value: " + " "))
        base1.hlim = int(input("Please input your Hop Limit (hlim): " + " "))
        payload = input("Please input your payload: " + " ")
        # Coverting tc value into ASCII
        # Since the "tc" value holds 8 bits (6 + 2) we will need to do a conversion for the program to accept it
        # For instance if we give it a value of 96, the hex value should be 0x60 (hex) we can verify this on wireshark
        ascii = chr(base1.tc)
        assci1 = chr(base1.fl)
        print(50 * "-")
        print(Fore.GREEN + "The destination address you have chosen is: " + " " + base1.dst)
        print(Fore.GREEN + "The destination address you have chosen is: " + " " + base1.src)
        # print("The ASCII Value based on you TC choice is: " + base1.tc)
        # print("The ASCII value of TC is: " + ascii)
        print(50 * "-")
        extension1 = IPv6ExtHdrHopByHop()
        extension2 = ICMPv6EchoRequest(data=payload)
        jumbo = Jumbo()
        jumbo.jumboplen = 2 ** 30
        extension1.options = jumbo
        packet2 = base1 / extension1 / extension2
        print("The current packet is:")
        print(50 * "-")
        packet2.show()
        print(50 * "-")
        print("What would you like to do?:")
        print(50 * "-")
        print("Send packet (1)")
        print("Save packet and go back to the main menu (2)")
        print(50 * "-")
        selection = input("Select your option:" + " ")
        if selection == "1":
            send(packet2)
            print("Packet sent!")
            print(50 * "-")
            print(packet2)
            print(50 * "-")
            print("Hexdump of the sent packet")
            print(50 * "-")
            hexdump(packet2)
            print(50 * "-")
            input("Press any key to go back:")
            print(50 * "-")
            os.system("clear")
            show_menu_one()
        elif selection == "2":
            os.system("clear")
            print(70 * "-")
            print("Send the packet and save it")
            print("We will be using tcpdump for this ")
            print("The command will be: 'tcpdump -s 0 -i eth0 -w test.pcap'")
            print("-s stands for the capture byte")
            print("-i stands for the interface")
            print("-w stands for the name & path to save pcap file")
            print(70 * "-")
            print("Instructions:")
            print("1: Execute 'pcap.py' ")
            print("2: Add the values that you will be asked for")
            print("3: Before hitting enter, add the asked values on the next screen")
            print(50 * "-")
            input("Press any key to go to the next screen: ")
            os.system("clear")
            print(50 * "-")
            print("Please add the following information to build the packet")
            print(50 * "-")
            print(Fore.BLUE + "Here we will modify an IPv6 packet, for this we need to specify a destination address:")
            print(50 * "-")
            base1 = IPv6()
            base1.dst = input(Fore.RED + "Please input your destination address:" + " ")
            base1.src = input(Fore.RED + "Please input your source address: " + " ")
            base1.tc = int(input("Please input your Traffic Class (tc) value: " + " "))
            base1.fl = int(input("Please input you Flow Label (fl) value: " + " "))
            base1.hlim = int(input("Please input your Hop Limit (hlim): " + " "))
            payload = input("Please input your payload: " + " ")
            # Coverting tc value into ASCII
            # Since the "tc" value holds 8 bits (6 + 2) we will need to do a conversion for the program to accept it
            # For instance if we give it a value of 96, the hex value should be 0x60 (hex) we can verify this on wireshark
            ascii = chr(base1.tc)
            assci1 = chr(base1.fl)
            print(50 * "-")
            print(Fore.GREEN + "The destination address you have chosen is: " + " " + base1.dst)
            print(Fore.GREEN + "The destination address you have chosen is: " + " " + base1.src)
            # print("The ASCII Value based on you TC choice is: " + base1.tc)
            # print("The ASCII value of TC is: " + ascii)
            print(50 * "-")
            extension1 = IPv6ExtHdrHopByHop()
            extension2 = ICMPv6EchoRequest(data=payload)
            jumbo = Jumbo()
            jumbo.jumboplen = 2 ** 30
            extension1.options = jumbo
            packet2 = base1 / extension1 / extension2
            print("The current packet is:")
            print(50 * "-")
            packet2.show()
            print(50 * "-")
            print("What would you like to do?:")
            print(50 * "-")
            print("Send packet (1)")
            print("Go back to the main menu (2)")
            print(50 * "-")
            inputt = input("Please select your option: " + "")
            if inputt == "1":
                print(50 * "-")
                send(packet2)
                print("Sent packet!")
                print(50 * "-")
                print("Please check output in the 'pcaps' folder!")
                print(50 * "-")
                input("Press any key to go back to the menu: ")
                os.system("clear")
                show_menu_one()
            elif inputt == "2":
                os.system("clear")
                show_menu_one()
    elif target == "3":
        os.system("clear")
        print(50 * "-")
        print("There is currently only the Routing Header Type 0")
        print("it is depreceated nd should not be used (RFC-5095)")
        print(50 * "-")
        base2 = IPv6()
        extension2 = IPv6ExtHdrRouting()
        base2.dst = input("Please input your destination address:" + " ")
        base2.src = input("Please input your source address: " + " ")
        base2.tc = int(input("Please input your Traffic Class (tc) value: " + " "))
        base2.fl = int(input("Please input you Flow Label (fl) value: " + " "))
        print(50 * "-")
        print("The destination address you have chosen is: " + " " + base2.dst)
        print("The destination address you have chosen is: " + " " + base2.src)
        ascii = chr(base2.tc)
        assci1 = chr(base2.fl)
        print(50 * "-")
        print("ASCII value of TC: " + ascii)
        print(50 * "-")
        packet3 = base2 / extension2
        print("Here is the IPv6 Routing Extension Header")
        print(50 * "-")
        packet3.show()
        print(50 * "-")
        print("What would you like to do?:")
        print(50 * "-")
        print("Send packet (1)")
        print("Save packet and go back to the main menu(2)")
        print(50 * "-")
        selection = input("Select your option:" + " ")
        if selection == "1":
            send(packet3)
            print("Packet sent!")
            print(50 * "-")
            print(packet3)
            print(50 * "-")
            print("Hexdump of the sent packet")
            print(50 * "-")
            hexdump(packet3)
            print(50 * "-")
            input("Press any key to go back:")
            print(50 * "-")
            os.system("clear")
            show_menu_one()
        elif selection == "2":
            os.system("clear")
            print(70 * "-")
            print("Send the packet and save it")
            print("We will be using tcpdump for this ")
            print("The command will be: 'tcpdump -s 0 -i eth0 -w test.pcap'")
            print("-s stands for the capture byte")
            print("-i stands for the interface")
            print("-w stands for the name & path to save pcap file")
            print(70 * "-")
            print("Instructions:")
            print("1: Execute 'pcap.py' ")
            print("2: Add the values that you will be asked for")
            print("3: Before hitting enter, add the asked values on the next screen")
            print(50 * "-")
            input("Press any key to go to the next screen: ")
            os.system("clear")
            print(50 * "-")
            print("Please add the following information to build the packet")
            print(50 * "-")
            print("There is currently only the Routing Header Type 0")
            print("it is depreceated nd should not be used (RFC-5095)")
            print(50 * "-")
            base2 = IPv6()
            extension2 = IPv6ExtHdrRouting()
            base2.dst = input("Please input your destination address:" + " ")
            base2.src = input("Please input your source address: " + " ")
            base2.tc = int(input("Please input your Traffic Class (tc) value: " + " "))
            base2.fl = int(input("Please input you Flow Label (fl) value: " + " "))
            print(50 * "-")
            print("The destination address you have chosen is: " + " " + base2.dst)
            print("The destination address you have chosen is: " + " " + base2.src)
            ascii = chr(base2.tc)
            assci1 = chr(base2.fl)
            print(50 * "-")
            print("ASCII value of TC: " + ascii)
            print(50 * "-")
            packet3 = base2 / extension2
            print("Here is the IPv6 Routing Extension Header")
            print(50 * "-")
            packet3.show()
            print(50 * "-")
            print("What would you like to do?:")
            print(50 * "-")
            print("Send packet (1)")
            print("Save packet and go back to the main menu(2)")
            print(50 * "-")
            inputt = input("Please select your option: " + "")
            if inputt == "1":
                print(50 * "-")
                send(packet3)
                print("Sent packet!")
                print(50 * "-")
                print("Please check output in the 'pcaps' folder!")
                print(50 * "-")
                input("Press any key to go back to the menu: ")
                os.system("clear")
                show_menu_one()
            elif inputt == "2":
                os.system("clear")
                show_menu_one()
    elif target == "4":
        os.system("clear")
        print(50 * "-")
        print("The Fragment header is represented by the IPv6ExtHdrFragment")
        print(50 * "-")
        base4 = IPv6()
        extension4 = IPv6ExtHdrFragment()
        base4.dst = input("Please input your destination address:" + " ")
        base4.src = input("Please input your source address: " + " ")
        base4.tc = int(input("Please input your Traffic Class (tc) value: " + " "))
        base4.fl = int(input("Please input you Flow Label (fl) value: " + " "))
        print(50 * "-")
        print("The destination address you have chosen is: " + " " + base4.dst)
        print("The destination address you have chosen is: " + " " + base4.src)
        ascii = chr(base4.tc)
        assci1 = chr(base4.fl)
        print(50 * "-")
        packet4 = base4 / extension4
        print("Here is the IPv6 Routing Extension Header")
        print(50 * "-")
        packet4.show()
        print(50 * "-")
        print("What would you like to do?:")
        print(50 * "-")
        print("Send packet (1)")
        print("Save packet and go back to the main menu(2)")
        print(50 * "-")
        selection = input("Select your option:" + " ")
        if selection == "1":
            send(packet4)
            print("Packet sent!")
            print(50 * "-")
            print(packet4)
            print(50 * "-")
            print("Hexdump of the sent packet")
            print(50 * "-")
            hexdump(packet4)
            print(50 * "-")
            input("Press any key to go back:")
            print(50 * "-")
            os.system("clear")
            show_menu_one()
        elif selection == "2":
            os.system("clear")
            print(70 * "-")
            print("Send the packet and save it")
            print("We will be using tcpdump for this ")
            print("The command will be: 'tcpdump -s 0 -i eth0 -w test.pcap'")
            print("-s stands for the capture byte")
            print("-i stands for the interface")
            print("-w stands for the name & path to save pcap file")
            print(70 * "-")
            print("Instructions:")
            print("1: Execute 'pcap.py' ")
            print("2: Add the values that you will be asked for")
            print("3: Before hitting enter, add the asked values on the next screen")
            print(50 * "-")
            input("Press any key to go to the next screen: ")
            os.system("clear")
            print(50 * "-")
            print("Please add the following information to build the packet")
            print(50 * "-")
            print("The Fragment header is represented by the IPv6ExtHdrFragment")
            print(50 * "-")
            base4 = IPv6()
            extension4 = IPv6ExtHdrFragment()
            base4.dst = input("Please input your destination address:" + " ")
            base4.src = input("Please input your source address: " + " ")
            base4.tc = int(input("Please input your Traffic Class (tc) value: " + " "))
            base4.fl = int(input("Please input you Flow Label (fl) value: " + " "))
            print(50 * "-")
            print("The destination address you have chosen is: " + " " + base4.dst)
            print("The destination address you have chosen is: " + " " + base4.src)
            ascii = chr(base4.tc)
            assci1 = chr(base4.fl)
            print(50 * "-")
            packet4 = base4 / extension4
            print("Here is the IPv6 Routing Extension Header")
            print(50 * "-")
            packet4.show()
            print(50 * "-")
            print("What would you like to do?:")
            print(50 * "-")
            print("Send packet (1)")
            print("Go back to the main menu(2)")
            print(50 * "-")
            inputt = input("Please select your option: " + "")
            if inputt == "1":
                print(50 * "-")
                send(packet4)
                print("Sent packet!")
                print(50 * "-")
                print("Please check output in the 'pcaps' folder!")
                print(50 * "-")
                input("Press any key to go back to the menu: ")
                os.system("clear")
                show_menu_one()
            elif inputt == "2":
                os.system("clear")
                show_menu_one()
    elif target == "5":
        os.system("clear")
        print(80 * "-")
        print("The Destination Options header is used to specify packet delivery parameters for either intermediate destinations or the final destination")
        print(80 * "-")
        base5 = IPv6()
        extension5 = IPv6ExtHdrDestOpt()
        base5.dst = input("Please input your destination address:" + " ")
        base5.src = input("Please input your source address: " + " ")
        base5.tc = int(input("Please input your Traffic Class (tc) value: " + " "))
        base5.fl = int(input("Please input you Flow Label (fl) value: " + " "))
        print(50 * "-")
        print("The destination address you have chosen is: " + " " + base5.dst)
        print("The destination address you have chosen is: " + " " + base5.src)
        ascii = chr(base5.tc)
        assci1 = chr(base5.fl)
        print(50 * "-")
        packet5 = base5 / extension5
        print("Here is the IPv6 Routing Extension Header")
        print(50 * "-")
        packet5.show()
        print(50 * "-")
        print("What would you like to do?:")
        print(50 * "-")
        print("Send packet (1)")
        print("Save packet and go back to the main menu(2)")
        print(50 * "-")
        selection = input("Select your option:" + " ")
        if selection == "1":
            send(packet5)
            print("Packet sent!")
            print(50 * "-")
            print(packet5)
            print(50 * "-")
            print("Hexdump of the packet sent")
            print(50 * "-")
            hexdump(packet5)
            print(50 * "-")
            input("Press any key to go back:")
            print(50 * "-")
            os.system("clear")
            show_menu_one()
        elif selection == "2":
            os.system("clear")
            print(70 * "-")
            print("Send the packet and save it")
            print("We will be using tcpdump for this ")
            print("The command will be: 'tcpdump -s 0 -i eth0 -w test.pcap'")
            print("-s stands for the capture byte")
            print("-i stands for the interface")
            print("-w stands for the name & path to save pcap file")
            print(70 * "-")
            print("Instructions:")
            print("1: Execute 'pcap.py' ")
            print("2: Add the values that you will be asked for")
            print("3: Before hitting enter, add the asked values on the next screen")
            print(50 * "-")
            input("Press any key to go to the next screen: ")
            os.system("clear")
            print(50 * "-")
            print("The Destination Options header is used to specify packet delivery parameters for either intermediate destinations or the final destination")
            print(80 * "-")
            base5 = IPv6()
            extension5 = IPv6ExtHdrDestOpt()
            base5.dst = input("Please input your destination address:" + " ")
            base5.src = input("Please input your source address: " + " ")
            base5.tc = int(input("Please input your Traffic Class (tc) value: " + " "))
            base5.fl = int(input("Please input you Flow Label (fl) value: " + " "))
            print(50 * "-")
            print("The destination address you have chosen is: " + " " + base5.dst)
            print("The destination address you have chosen is: " + " " + base5.src)
            ascii = chr(base5.tc)
            assci1 = chr(base5.fl)
            print(50 * "-")
            packet5 = base5 / extension5
            print("Here is the IPv6 Routing Extension Header")
            print(50 * "-")
            packet5.show()
            print(50 * "-")
            print("What would you like to do?:")
            print(50 * "-")
            print("Send packet (1)")
            print("Save packet and go back to the main menu(2)")
            print(50 * "-")
            inputt = input("Please select your option: " + "")
            if inputt == "1":
                print(50 * "-")
                send(packet5)
                print("Sent packet!")
                print(50 * "-")
                print("Please check output in the 'pcaps' folder!")
                print(50 * "-")
                input("Press any key to go back to the menu: ")
                os.system("clear")
                show_menu_one()
            elif inputt == "2":
                os.system("clear")
                show_menu_one()
    elif target == "7":
        input("Press any key to exit:")
        exit()
    elif target == "6":
        # We are going to calculate the amount of bytes of captured packets each second
        # We need to send some packets this time, (maybe the saved packet)
        os.system("clear")
        print(70 * "-")
        print("Here we will be calculating the Byterate of the packets")
        print(70 * "-")
        print("Make and send custom packet (Capture) (1)")
        print("Go back to main menu (2)")
        print("Exit (3)")
        print(70 * "-")
        target = input("Please select your option: ")
        if target == "1":
            os.system("clear")
            # // TODO
            print(50 * "-")
            print("The following options are:")
            print(50 * "-")
            print("Make new custom packet (1)")
            print("load saved packet (2)")
            print("Go back to main menu (3)")
            print("Exit (4)")
            print(50 * "-")
            target1 = input("Please select your option: " + "")
            if target1 == "1":
                os.system("clear")
                # //TODO
                print(50 * "-")
                print("Please select one of the options below:")
                print(50 * "-")
                print("Basic IPv6 Packet Structure (1)")
                print("Edit Hop-By-Hop (2)")
                print("Edit Routing (3)")
                print("Edit Fragment (4)")
                print("Edit Destination (5)")
                print("Go back to the main menu (6)")
                print(50 * "-")
                target_sub1 = input("Please select your option: " + " ")
                if target_sub1 == "1":
                    os.system("clear")
                    i = IPv6()
                    i.show()
                    print(50 * "-")
                    input("Press any key to go back to the main menu: ")
                    print(50 * "-")
                    os.system("clear")
                    show_menu_one()
                elif target_sub1 == "2":
                    os.system("clear")
                    print(50 * "-")
                    print(Fore.BLUE + "Here we will modify an IPv6 packet, for this we need to specify a destination address:")
                    print(50 * "-")
                    base_sub1 = IPv6()
                    base_sub1.dst = input(Fore.RED + "Please input your destination address:" + " ")
                    base_sub1.src = input(Fore.RED + "Please input your source address: " + " ")
                    base_sub1.tc = int(input("Please input your Traffic Class (tc) value: " + " "))
                    base_sub1.fl = int(input("Please input you Flow Label (fl) value: " + " "))
                    payload = input("Please input your payload: " + " ")
                    ascii = chr(base_sub1.tc)
                    assci1 = chr(base_sub1.fl)
                    print(50 * "-")
                    print(Fore.GREEN + "The destination address you have chosen is: " + " " + base_sub1.dst)
                    print(Fore.GREEN + "The destination address you have chosen is: " + " " + base_sub1.src)
                    # print("The ASCII Value based on you TC choice is: " + base1.tc)
                    # print("The ASCII value of TC is: " + ascii)
                    print(50 * "-")
                    extension1 = IPv6ExtHdrHopByHop()
                    extension2 = ICMPv6EchoRequest(data=payload)
                    jumbo = Jumbo()
                    jumbo.jumboplen = 2 ** 30
                    extension1.options = jumbo
                    packet2 = base_sub1 / extension1 / extension2
                    print("The current packet is:")
                    print(50 * "-")
                    packet2.show()
                    print(50 * "-")
                    print("What would you like to do?:")
                    print(50 * "-")
                    print("Send packet only (1)")
                    print("Send Packet and calculate bitrate (2)")
                    print("Go back to the main menu (3)")
                    print(50 * "-")
                    selection = input("Select your option:" + " ")
                    if selection == "1":
                        os.system("clear")
                        print(50 * "")
                        print("Sending packet...")
                        print(50 * "-")
                        send(packet2)
                        print(50 * "-")
                        print("Go back to main menu (1)")
                        print("Exit (2)")
                        selection_sub = input("Please select your option:" + " ")
                        if selection_sub == "1":
                            os.system("clear")
                            show_menu_one()
                        elif selection_sub == "2":
                            os.system("clear")
                            print(50 * "-")
                            print("Thank you for using our program!")
                            print("Exiting...")
                            print(50 * "-")
                            exit()
                    elif selection == "2":
                        os.system("clear")
                        print(75 * "-")
                        print("Here we are going to send the packet and calculate the bitrate")
                        print(75 * "-")
                        print("This is the packet that we are going to send and sniff:")
                        print(50 * "-")
                        print("WARNING")
                        print(50 * "-")
                        print("Open  terminal and execute 'sudo python3 ./sniffer.py' ")
                        print("you need this script to be able to do the calculaiton!")
                        print(50 * "-")
                        input("Press any key to procceed:")
                        print(75 * "-")
                        os.system("clear")
                        print(50 * "-")
                        print("This is the packet that we are going to send and sniff:")
                        print(50 * "-")
                        packet2.show()
                        print(75 * "-")
                        input("Press any button to start the bitrate calculation:")
                        send(packet2)
                        print("Packet sent! Check terminal")
                        print(50 * "-")
                        print("Please select an option: " + " ")
                        print(50 * "-")
                        print("Go back to main menu (1) ")
                        print("Exit program (2)")
                        print(50 * "-")
                        sub_target = input("Please select and option: " + " ")
                        if sub_target == "1":
                            os.system("clear")
                            show_menu_one()
                        elif sub_target == "2":
                            print(50 * "-")
                            print("thank you for using the program, exiting now!")
                            print(50 * "-")
                            input("Press any key to exit.....")
                            os.system("clear")
                            exit()
                    elif selection == "3":
                        os.system("clear")
                        show_menu_one()

                elif target_sub1 == "3":
                    os.system("clear")
                    os.system("clear")
                    print(50 * "-")
                    print("There is currently only the Routing Header Type 0")
                    print("it is depreceated nd should not be used (RFC-5095)")
                    print(50 * "-")
                    base2 = IPv6()
                    extension2 = IPv6ExtHdrRouting()
                    base2.dst = input("Please input your destination address:" + " ")
                    base2.src = input("Please input your source address: " + " ")
                    base2.tc = int(input("Please input your Traffic Class (tc) value: " + " "))
                    base2.fl = int(input("Please input you Flow Label (fl) value: " + " "))
                    print(50 * "-")
                    print("The destination address you have chosen is: " + " " + base2.dst)
                    print("The destination address you have chosen is: " + " " + base2.src)
                    ascii = chr(base2.tc)
                    assci1 = chr(base2.fl)
                    print(50 * "-")
                    print("ASCII value of TC: " + ascii)
                    print(50 * "-")
                    packet3 = base2 / extension2
                    print("Here is the IPv6 Routing Extension Header")
                    print(50 * "-")
                    packet3.show()
                    print(50 * "-")
                    print("What would you like to do?:")
                    print(50 * "-")
                    print("Send packet only (1)")
                    print("Send Packet and calculate bitrate (2)")
                    print("Go back to the main menu (3)")
                    selection = input("Select your option:" + " ")
                    if selection == "1":
                        os.system("clear")
                        print(50 * "")
                        print("Sending packet...")
                        print(50 * "-")
                        send(packet3)
                        print(50 * "-")
                        print("Go back to main menu (1)")
                        print("Exit (2)")
                        selection_sub = input("Please select your option:" + " ")
                        if selection_sub == "1":
                            os.system("clear")
                            show_menu_one()
                        elif selection_sub == "2":
                            os.system("clear")
                            print(50 * "-")
                            print("Thank you for using our program!")
                            print("Exiting...")
                            print(50 * "-")
                            exit()
                    elif selection == "2":
                        os.system("clear")
                        print(75 * "-")
                        print("Here we are going to send the packet and calculate the bitrate")
                        print(75 * "-")
                        print("This is the packet that we are going to send and sniff:")
                        print(50 * "-")
                        print("WARNING")
                        print(50 * "-")
                        print("Open  terminal and execute 'sudo python3 ./sniffer.py' ")
                        print("you need this script to be able to do the calculaiton!")
                        print(50 * "-")
                        input("Press any key to procceed")
                        print(75 * "-")
                        os.system("clear")
                        print(50 * "-")
                        print("This is the packet that we are going to send and sniff:")
                        print(50 * "-")
                        packet3.show()
                        print(75 * "-")
                        input("Press any button to start the bitrate calculation:")
                        send(packet3)
                        print("Packet sent! Check terminal")
                        print(50 * "-")
                        print("Please select an option: " + " ")
                        print(50 * "-")
                        print("Go back to main menu (1) ")
                        print("Exit program (2)")
                        print(50 * "-")
                        sub_target = input("Please select and option: " + " ")
                        if sub_target == "1":
                            os.system("clear")
                            show_menu_one()
                        elif sub_target == "2":
                            print(50 * "-")
                            print("thank you for using the program, exiting now!")
                            print(50 * "-")
                            input("Press any key to exit.....")
                            os.system("clear")
                            exit()
                        elif selection == "3":
                            os.system("clear")
                            print(50 * "-")
                            print("Exiting the program, thanks for using!")
                            print(50 * "-")
                            input("Press any key to exit...")
                            os.system("clear")
                            exit()
                elif target_sub1 == "4":
                    # //TODO
                    os.system("clear")
                    print(50 * "-")
                    print("The Fragment header is represented by the IPv6ExtHdrFragment")
                    print(50 * "-")
                    base4 = IPv6()
                    extension4 = IPv6ExtHdrFragment()
                    base4.dst = input("Please input your destination address:" + " ")
                    base4.src = input("Please input your source address: " + " ")
                    base4.tc = int(input("Please input your Traffic Class (tc) value: " + " "))
                    base4.fl = int(input("Please input you Flow Label (fl) value: " + " "))
                    print(50 * "-")
                    print("The destination address you have chosen is: " + " " + base4.dst)
                    print("The destination address you have chosen is: " + " " + base4.src)
                    ascii = chr(base4.tc)
                    assci1 = chr(base4.fl)
                    print(50 * "-")
                    packet4 = base4 / extension4
                    print("Here is the IPv6 Routing Extension Header")
                    print(50 * "-")
                    packet4.show()
                    print(50 * "-")
                    print("What would you like to do?:")
                    print(50 * "-")
                    print("Send packet only (1)")
                    print("Send Packet and calculate bitrate (2)")
                    print("Go back to the main menu (3)")
                    selection = input("Select your option:" + " ")
                    if selection == "1":
                        os.system("clear")
                        print(50 * "")
                        print("Sending packet...")
                        print(50 * "-")
                        send(packet4)
                        print(50 * "-")
                        print("Go back to main menu (1)")
                        print("Exit (2)")
                        selection_sub = input("Please select your option:" + " ")
                        if selection_sub == "1":
                            os.system("clear")
                            show_menu_one()
                        elif selection_sub == "2":
                            os.system("clear")
                            print(50 * "-")
                            print("Thank you for using our program!")
                            print("Exiting...")
                            print(50 * "-")
                            exit()
                    elif selection == "2":
                        os.system("clear")
                        print(75 * "-")
                        print("Here we are going to send the packet and calculate the bitrate")
                        print(75 * "-")
                        print("This is the packet that we are going to send and sniff:")
                        print(50 * "-")
                        print("WARNING")
                        print(50 * "-")
                        print("Open  terminal and execute 'sudo python3 ./sniffer.py' ")
                        print("you need this script to be able to do the calculaiton!")
                        print(50 * "-")
                        input("Press any key to procceed")
                        print(75 * "-")
                        os.system("clear")
                        print(50 * "-")
                        print("This is the packet that we are going to send and sniff:")
                        print(50 * "-")
                        packet4.show()
                        print(75 * "-")
                        input("Press any button to start the bitrate calculation:")
                        send(packet4)
                        print("Packet sent! Check terminal")
                        print(50 * "-")
                        print("Please select an option: " + " ")
                        print(50 * "-")
                        print("Go back to main menu (1) ")
                        print("Exit program (2)")
                        print(50 * "-")
                        sub_target = input("Please select and option: " + " ")
                        if sub_target == "1":
                            os.system("clear")
                            show_menu_one()
                        elif sub_target == "2":
                            print(50 * "-")
                            print("thank you for using the program, exiting now!")
                            print(50 * "-")
                            input("Press any key to exit.....")
                            os.system("clear")
                            exit()
                    elif selection == "3":
                        os.system("clear")
                        print(50 * "-")
                        print("Exiting the program, thanks for using!")
                        print(50 * "-")
                        input("Press any key to exit...")
                        os.system("clear")
                        exit()
                elif target_sub1 == "5":
                    # //TODO
                    os.system("clear")
                    print(80 * "-")
                    print("The Destination Options header is used to specify packet delivery parameters for either intermediate destinations or the final destination")
                    print(80 * "-")
                    base5 = IPv6()
                    extension5 = IPv6ExtHdrDestOpt()
                    base5.dst = input("Please input your destination address:" + " ")
                    base5.src = input("Please input your source address: " + " ")
                    base5.tc = int(input("Please input your Traffic Class (tc) value: " + " "))
                    base5.fl = int(input("Please input you Flow Label (fl) value: " + " "))
                    print(50 * "-")
                    print("The destination address you have chosen is: " + " " + base5.dst)
                    print("The destination address you have chosen is: " + " " + base5.src)
                    ascii = chr(base5.tc)
                    assci1 = chr(base5.fl)
                    print(50 * "-")
                    packet5 = base5 / extension5
                    print("Here is the IPv6 Routing Extension Header")
                    print(50 * "-")
                    packet5.show()
                    print(50 * "-")
                    print("What would you like to do?:")
                    print(50 * "-")
                    print("Send packet only (1)")
                    print("Send Packet and calculate bitrate (2)")
                    print("Go back to the main menu (3)")
                    selection = input("Select your option:" + " ")
                    if selection == "1":
                        os.system("clear")
                        print(50 * "")
                        print("Sending packet...")
                        print(50 * "-")
                        send(packet5)
                        print(50 * "-")
                        print("Go back to main menu (1)")
                        print("Exit (2)")
                        selection_sub = input("Please select your option:" + " ")
                        if selection_sub == "1":
                            os.system("clear")
                            show_menu_one()
                        elif selection_sub == "2":
                            os.system("clear")
                            print(50 * "-")
                            print("Thank you for using our program!")
                            print("Exiting...")
                            print(50 * "-")
                            exit()
                    elif selection == "2":
                        os.system("clear")
                        print(75 * "-")
                        print("Here we are going to send the packet and calculate the bitrate")
                        print(75 * "-")
                        print("This is the packet that we are going to send and sniff:")
                        print(50 * "-")
                        print("WARNING")
                        print(50 * "-")
                        print("Open  terminal and execute 'sudo python3 ./sniffer.py' ")
                        print("you need this script to be able to do the calculaiton!")
                        print(50 * "-")
                        input("Press any key to procceed")
                        print(75 * "-")
                        os.system("clear")
                        print(50 * "-")
                        print("This is the packet that we are going to send and sniff:")
                        print(50 * "-")
                        packet5.show()
                        print(75 * "-")
                        input("Press any button to start the bitrate calculation:")
                        send(packet5)
                        print("Packet sent! Check terminal")
                        print(50 * "-")
                        print("Please select an option: " + " ")
                        print(50 * "-")
                        print("Go back to main menu (1) ")
                        print("Exit program (2)")
                        print(50 * "-")
                        sub_target = input("Please select and option: " + " ")
                        if sub_target == "1":
                            os.system("clear")
                            show_menu_one()
                        elif sub_target == "2":
                            print(50 * "-")
                            print("thank you for using the program, exiting now!")
                            print(50 * "-")
                            input("Press any key to exit.....")
                            os.system("clear")
                            exit()
                    elif selection == "3":
                        os.system("clear")
                        print(50 * "-")
                        print("Exiting the program, thanks for using!")
                        print(50 * "-")
                        input("Press any key to exit...")
                        os.system("clear")
                        exit()
                elif target_sub1 == "6":
                    os.system("clear")
                    show_menu_one()
            elif target1 == "2":
                os.system("clear")
                print(50 * "-")
                print("Instructions to load the packet")
                print(50 * "-")
                print("1: Execute 'sniffer.py'")
                print("2: Check Directory to see '.pcap' files")
                print("3: Execute 'tcpreplay' on 'pcap.py'")
                print("4: Wait for the output on both 'pcap.py' & 'sniffer.py'")
                print(50 * "-")
                print("Go back to the main menu (1)")
                print("Show directory 'pcap' to select a file (2)")
                print("Exit (3)")
                print(50 * "-")
                input_c = input("Please select an option: " + "")
                print(50 * "-")
                if input_c == "1":
                    os.system("clear")
                    show_menu_one()
                elif input_c == "2":
                    print("These are the files on the 'pcap' folder:")
                    print(50 * "-")
                    os.system("ls /home/kali/PycharmProjects/Network/pcaps/")
                    print(50 * "-")
                    input("Press any key to go back to the main menu:")
                    os.system("clear")
                    show_menu_one()
            elif target1 == "3":
                os.system("clear")
                show_menu_one()
                # //TODO
            elif target == "3":
                os.system("clear")
                show_menu_one()
            elif target1 == "4":
                os.system("clear")
                print(50 * "-")
                print("Exiting now... thanks for using the program!")
                print(50 * "-")
                os.system("clear")
                exit()
    elif target == "2":
        os.system("clear")
        show_menu_one()
    elif target == "3":
        os.system("clear")
        print(50 * "-")
        print("Sure you want to exit?")
        print(50 * "-")
        target3 = input("Select Y or N to exit the program: ")
        if target3 == "Y":
            os.system("clear")
            print("Thanks for using the program")
        elif target3 == "N":
            os.system("clear")
            show_menu_one()


show_menu_one()  # Showing the menu

# // TODO -> Being able to store packets and being able to use them in the send packets section
# // TODO -> Change menu to a more customizable one with ability to modify extension headers
